=begin
A unit fraction contains 1 in the numerator. The decimal representation of the unit fractions with denominators 2 to 10 are given:

1/2	= 	0.5
1/3	= 	0.(3)
1/4	= 	0.25
1/5	= 	0.2
1/6	= 	0.1(6)
1/7	= 	0.(142857)
1/8	= 	0.125
1/9	= 	0.(1)
1/10	= 	0.1
Where 0.1(6) means 0.166666..., and has a 1-digit recurring cycle. It can be seen that 1/7 has a 6-digit recurring cycle.

Find the value of d < 1000 for which 1/d contains the longest recurring cycle in its decimal fraction part.
=end

dmax = 200
i = 2
d = 0
maxcyclelen = 0

while i < dmax
	cyclelen = 1
	
	num = 1
	numloop = 1
	while (num*10**cyclelen)/i == 0
		num *= 10
		numloop += 1
	end
	
	while num*10**cyclelen % i != num*10**(2*cyclelen) % i && cyclelen > 0#the first statment sees to see if the mod after the first cyclelen digits equals the mod after second cyclelen digits. If equal there is a cyclelen length repeat.
		cyclelen += 1
		if (10**cyclelen) % i == 0#no repeat
			cyclelen = 0
		end
		
		if cyclelen > i#number repeats, but doesn't start at the first digit
			num = 10**(numloop) % i
			numloop += 1
			cyclelen = 1
		end
	end
	
		puts("#{i} #{cyclelen}")
	if cyclelen > maxcyclelen
		maxcyclelen = cyclelen
		d = i
	end
	i += 1
end

puts("The longest recurring cycle for values less than #{dmax} is d = #{d} and has a cycle of length #{maxcyclelen}.")
