=begin	

A perfect number is a number for which the sum of its proper divisors is exactly equal to the number. For example, the sum of the proper divisors of 28 would be 1 + 2 + 4 + 7 + 14 = 28, which means that 28 is a perfect number.

A number n is called deficient if the sum of its proper divisors is less than n and it is called abundant if this sum exceeds n.

As 12 is the smallest abundant number, 1 + 2 + 3 + 4 + 6 = 16, the smallest number that can be written as the sum of two abundant numbers is 24. By mathematical analysis, it can be shown that all integers greater than 28123 can be written as the sum of two abundant numbers. However, this upper limit cannot be reduced any further by analysis even though it is known that the greatest number that cannot be expressed as the sum of two abundant numbers is less than this limit.

Find the sum of all the positive integers which cannot be written as the sum of two abundant numbers.

=end

abnums = Array.new
num = 12#12 is the first abundant number
while num <= 28111#28123 - 12
	divsum = 1#num is always divisible by 1
	i = 2
	while i*i < num#finds divisors of num and adds to divsum
		if num % i == 0
			divsum += i
			divsum += num / i
		end
			
		i += 1
	end

	if i*i == num#num is a perfect square
		divsum += i
	end
	
	if divsum > num #num is abundant
		abnums.push(num)
	end

	num += 1

end

absums = Array.new#this loop will create the array absums which will hold the sums of two abundant numbers
i = 0
while i < abnums.length
	j = 0
	while j < abnums.length
		if (abnums[i] + abnums[j] > 28123)
			break
		end
		absums.push(abnums[i]+abnums[j])
		j += 1
		#puts("#{i} #{j} #{absums.last}")
	end
	i += 1
end

absums = absums.sort.uniq
sum = 0
num = 1
i = 0
while num <= 28123
	while i < absums.length#this loop will loop through absums intelligently, not starting over at i = 0 every time. This takes advantage of the sorting of absums to process more efficiently
		if absums[i] > num
			while absums[i] > num
				if i == 0#can't go to absums[-1]
					break
				end
				i = i-1
			end
			if absums[i] != num
				sum += num
			end
			break
		elsif absums[i] < num
			while absums[i] < num
				i = i+1
			end
			if absums[i] != num
				sum += num
			end
			break
		else#num is an element of absums, ie is a sum of two abundant numbers
			break
		end
	end	
	num += 1
end

puts("The sum of all numbers that can not be expressed as the sum of two abundant numbers is #{sum}")
